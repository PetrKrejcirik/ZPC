const int TRIG_PIN = 9;
const int ECHO_PIN = 10;

const int START_TRIGGER      = 0;
const int WAIT_TRIGGER_HIGH  = 1;
const int WAIT_TRIGGER_LOW   = 2;
const int WAIT_ECHO_HIGH     = 3;
const int WAIT_ECHO_LOW      = 4;

int SENS_STATE;
unsigned long LastTS;
unsigned long echoStart;
float distance;

void setup() {
  Serial.begin(9600);
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  digitalWrite(TRIG_PIN, LOW);
  SENS_STATE = START_TRIGGER;
}

void loop() {
  unsigned long now = micros();

  switch (SENS_STATE) {

    case START_TRIGGER:
      digitalWrite(TRIG_PIN, HIGH);
      LastTS = now;
      SENS_STATE = WAIT_TRIGGER_HIGH;
      break;

    case WAIT_TRIGGER_HIGH:
      if (now - LastTS >= 10) {
        digitalWrite(TRIG_PIN, LOW);
        LastTS = now;
        SENS_STATE = WAIT_TRIGGER_LOW;
      }
      break;

    case WAIT_TRIGGER_LOW:
      if (now - LastTS >= 2) {
        LastTS = now;
        SENS_STATE = WAIT_ECHO_HIGH;
      }
      break;

    case WAIT_ECHO_HIGH:
      if (digitalRead(ECHO_PIN) == HIGH) {
        echoStart = now;
        SENS_STATE = WAIT_ECHO_LOW;
      } else if (now - LastTS > 30000) {
        SENS_STATE = START_TRIGGER;
      }
      break;

    case WAIT_ECHO_LOW:
      if (digitalRead(ECHO_PIN) == LOW) {
        unsigned long duration = now - echoStart;
        distance = (duration * 0.0343) / 2.0;

        Serial.print("Vzdalenost: ");
        Serial.print(distance);
        Serial.println(" cm");

        SENS_STATE = START_TRIGGER;
      }
      break;
  }

}
